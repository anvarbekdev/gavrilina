import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import NavBar from "@/components/navbar/nav-bar";
import { aaStetica } from "@/lib/font";
import { cookies } from "next/headers";
import { UserAuth } from "@/types/type";
import { verifyToken } from "@/lib/auth";
import { UserRole } from "@/types/enums";
import { Providers } from "@/components/providers";
import { Footer } from "@/components/footer";

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies()
  const token = (await cookieStore).get('access_token')?.value

  let user = null as UserAuth | null

  if (token) {
    try {
      const decoded = await verifyToken(token);

      if (decoded && decoded.userId && decoded.role) {
        user = {
          userId: decoded.userId.toString(),
          role: UserRole[decoded.role as keyof typeof UserRole],
        };
      }
    } catch (e) {
      console.log(e)
      user = null
    }
  }

  return (
    <html lang="en">
      <body
        className={`${aaStetica.className} ${geistMono.variable} antialiased`}
      >
        <Providers token={token} user={user}>
          <NavBar />
          {children}
          <Footer />
        </Providers>
      </body>
    </html>
  );
}
